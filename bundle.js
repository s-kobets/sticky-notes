!function(e){function t(t){for(var r,o,u=t[0],i=t[1],s=t[2],f=0,p=[];f<u.length;f++)o=u[f],Object.prototype.hasOwnProperty.call(a,o)&&a[o]&&p.push(a[o][0]),a[o]=0;for(r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r]);for(l&&l(t);p.length;)p.shift()();return c.push.apply(c,s||[]),n()}function n(){for(var e,t=0;t<c.length;t++){for(var n=c[t],r=!0,u=1;u<n.length;u++){var i=n[u];0!==a[i]&&(r=!1)}r&&(c.splice(t--,1),e=o(o.s=n[0]))}return e}var r={},a={0:0},c=[];function o(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=r,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="dist/";var u=window.webpackJsonp=window.webpackJsonp||[],i=u.push.bind(u);u.push=t,u=u.slice();for(var s=0;s<u.length;s++)t(u[s]);var l=i;c.push([27,1]),n()}({27:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),c=n(14),o=n.n(c),u=n(2),i=n.n(u),s=n(3),l=n.n(s),f=n(5),p=n.n(f),d=n(1),b=n.n(d),v=n(6),_=n.n(v),h=n(7),O=n.n(h),g=n(8),m=n.n(g),j=n(9),y=n.n(j);function x(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function w(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?x(Object(n),!0).forEach((function(t){_()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):x(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var k,S,E,P,N=new(function(){function e(){m()(this,e),_()(this,"urlGlobal",null),arguments.length>0&&(this.nameStorage=arguments.length<=0?void 0:arguments[0])}return y()(e,[{key:"checkUrlGlobal",value:function(){this.urlGlobal instanceof Array||(this.urlGlobal=[])}},{key:"checkName",value:function(e){return this.nameStorage=e||"default"}},{key:"update",value:function(e){this.checkUrlGlobal();var t=JSON.stringify(e);localStorage.setItem(this.nameStorage,t)}},{key:"get",value:function(e){var t;return this.checkName(e),void 0!==localStorage&&(t=JSON.parse(localStorage.getItem(this.nameStorage))),void 0!==t&&(this.urlGlobal=t),this.urlGlobal}},{key:"nullStorage",value:function(){this.urlGlobal=[],this.add()}}]),e}())("notes"),C={get:(P=l()(i.a.mark((function e(){var t;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=N.get("notes")||[],e.abrupt("return",Promise.resolve(t));case 2:case"end":return e.stop()}}),e)}))),function(){return P.apply(this,arguments)}),add:(E=l()(i.a.mark((function e(t){var n,r,a;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,C.get();case 2:return n=e.sent,r=n.length,a=r?n[r-1].id+1:0,n=[].concat(O()(n),[w({id:a,content:""},t)]),N.update(n),e.abrupt("return",Promise.resolve(n));case 8:case"end":return e.stop()}}),e)}))),function(e){return E.apply(this,arguments)}),delete:(S=l()(i.a.mark((function e(t){var n,r;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,C.get();case 2:return n=e.sent,r=t.id,n=n.filter((function(e){return e.id!==Number(r)})),N.update(n),e.abrupt("return",Promise.resolve(n));case 7:case"end":return e.stop()}}),e)}))),function(e){return S.apply(this,arguments)}),update:(k=l()(i.a.mark((function e(t){return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:N.update(t);case 1:case"end":return e.stop()}}),e)}))),function(e){return k.apply(this,arguments)})},D=C,T=a.a.createContext({}),z=n(10),G=n.n(z),A=n(4),I=n.n(A),R=(Object(d.__css__)(".___SNote_gtdtb_1 {\n  display: inline-flex;\n  font-size: 16px;\n  cursor: pointer;\n  padding: 10px 15px;\n  margin: 10px;\n  border: 2px solid;\n  background-color: steelblue;\n  color: white;\n}","gtdtbz"),{__SNote:"___SNote_gtdtb_1"}),J=I()({},R),M=Object(d.create)([J,(Object(d.__css__)(".___SNote_b6pxz_1 {\n  background-color: var(--18ej1kb_0);\n}","b6pxze"),{__SNote:"___SNote_b6pxz_1"})]),$=Object(r.forwardRef)((function(e,t){var n=e.width,c=e.height,o=e.background,u=G()(e,["width","height","background"]),i=Object(r.useState)(null),s=p()(i,2),l=s[0],f=s[1],v=Object(r.useContext)(T).updateNotes,_=0,h=function(){var e=l.offsetWidth,t=l.offsetHeight,n=l.id;_>0&&v((function(r){return r.map((function(r){return r.id===Number(n)&&(r.height=t,r.width=e),r}))})),_+=1},O=Object(r.useCallback)((function(e){t(e),f(e)}),[]);Object(r.useEffect)((function(){var e=null;return l&&ResizeObserver&&(e=new ResizeObserver(h)).observe(l),function(){e&&e.disconnect()}}),[l]);return b()((Object(d.set)([M],{"--18ej1kb_0":o}),a.a.createElement("textarea",Object(d.map)("SNote",{ref:O,onChange:function(e){var t=e.currentTarget,n=t.id,r=t.value;v((function(e){return e.map((function(e){return e.id===Number(n)&&(e.content=r),e}))}))},style:{width:n,height:c},background:o},u,{$$style:b.a.$$style}))))})),B=(Object(d.__css__)(".___Trash_159sc_1 {\n  position: absolute;\n  left: 60%;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40%;\n  height: 50px;\n  border: 4px dashed black;\n  font-size: 22px;\n  font-weight: bold;\n}","159scv7"),{__Trash:"___Trash_159sc_1"}),L=I()({},B),U=Object(d.create)([L]),V=function(e){var t=Object(r.useContext)(T).updateNotes,n=function(){var e=l()(i.a.mark((function e(n){var r,a;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=Number(n.dataTransfer.getData("text")),e.next=3,D.delete({id:r});case 3:a=e.sent,t(a);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();return b()((Object(d.set)([U]),a.a.createElement("div",Object(d.map)("Trash",{onDrop:n,onDragOver:function(e){e.preventDefault()},children:"Remove note"},e))))},X=function(){function e(){m()(this,e),_()(this,"events",{})}return y()(e,[{key:"emit",value:function(e,t){var n=this.events[e];n&&n.forEach((function(e){e.call(null,t)}))}},{key:"subscribe",value:function(e,t){var n=this;return this.events[e]||(this.events[e]=[]),this.events[e].push(t),function(){n.events[e]=n.events[e].filter((function(e){return t!==e}))}}}]),e}();function Y(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:window,a=Object(r.useRef)();Object(r.useEffect)((function(){a.current=t}),[t]),Object(r.useEffect)((function(){if(n&&n.addEventListener){var t=function(e){return a.current(e)};return n.addEventListener(e,t),function(){n.removeEventListener(e,t)}}}),[e,n])}var q=new X,H=a.a.createContext({eventEmitter:q});function W(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function F(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?W(Object(n),!0).forEach((function(t){_()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):W(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var K=(Object(d.__css__)("\n  .___SContainer_593eg_1 {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    align-items: start;\n    width: 100%;\n    height: 100%;\n    padding: 5px;\n  }\n","593egr"),{__SContainer:"___SContainer_593eg_1"}),Q=Object(d.create)([K]),Z=function(e){var t=Object(r.useRef)(null),n=Object(r.useState)(null),c=p()(n,2),o=c[0],u=c[1],i=Object(r.useState)([]),s=p()(i,2),l=s[0],f=s[1],v=Object(r.useState)([{x:0,y:0}]),_=p()(v,2),h=_[0],g=_[1],m=Object(r.useState)({item:null,indexItem:null,active:!1,current:{x:0,y:0},initial:{x:0,y:0}}),j=p()(m,2),y=j[0],x=j[1];function w(e){f((function(t){return[].concat(O()(t),[e])})),g((function(e){return[].concat(O()(e),[{x:0,y:0}])}))}Object(r.useEffect)((function(){var e=new X;e.subscribe("item",w),u(e)}),[]);var k=Object(r.useCallback)((function(e){var t=l.indexOf(e.target);if(t>=0){e.dataTransfer.setData("text/plain",l[t].id);var n=h[t],r=e.clientX-n.x,a=e.clientY-n.y;x(F({},y,{initial:{x:r,y:a},current:{x:r,y:a}})),x((function(n){return F({},n,{active:!0,item:e.target,indexItem:t})}))}}),[h,l]),S=Object(r.useCallback)((function(e){var t=y.current;x(F({},y,{initial:{x:t.x,y:t.y},active:!1}))}),[y.current]),E=Object(r.useCallback)((function(e){if(y.active){e.preventDefault();var t=y.initial,n=e.clientX-t.x,r=e.clientY-t.y;x(F({},y,{current:{x:n,y:r}})),g((function(e){var t=e;return t[y.indexItem]={x:n,y:r},O()(t)})),a=n,c=r,y.item.style.transform="translate("+a+"px, "+c+"px)"}var a,c}),[y]);var P=t.current;Y("dragstart",k,P),Y("dragend",S,P),Y("drag",E,P);return a.a.createElement(H.Provider,{value:{eventEmitter:o}},b()((Object(d.set)([Q]),a.a.createElement("div",Object(d.map)("SContainer",{ref:t},e)))))},ee=function(e){var t=e.children,n=e.tag,c=void 0===n?"div":n,o=G()(e,["children","tag"]),u=Object(r.useContext)(H).eventEmitter,i=Object(r.useCallback)((function(e){u&&u.emit("item",e)}),[u]);return a.a.createElement(c,I()({ref:i,draggable:!0,onDragOver:function(e){e.preventDefault()}},o),t)},te=(Object(d.__css__)(".___Added_19j62_1 {\n  position: absolute;\n  left: 20%;\n  bottom: 0;\n  width: 40%;\n  height: 50px;\n  font-size: 24px;\n  color: white;\n  background: green;\n  cursor: pointer;\n}","19j62up"),{__Added:"___Added_19j62_1"}),ne=I()({},te),re=Object(d.create)([ne]),ae=function(e){var t=Object(r.useContext)(T),n=t.updateNotes,c=t.background,o=function(){var e=l()(i.a.mark((function e(){var t;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,D.add({background:c});case 2:t=e.sent,n(t);case 4:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();return b()((Object(d.set)([re]),a.a.createElement("button",Object(d.map)("Added",e,{children:"Added note",onClick:o}))))},ce=function(e,t){return function(){t.apply(void 0,arguments);var n=e[t.name.replace(/handle/,"on")];n&&n.apply(void 0,arguments)}},oe=(Object(d.__css__)(".___SSelect_g6i2m_1 {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 20%;\n  height: 50px;\n  font-size: 20px;\n}","g6i2mi"),{__SSelect:"___SSelect_g6i2m_1"}),ue=I()({},oe),ie=Object(d.create)([ue]),se=function(e){var t=Object(r.useContext)(T),n=t.background,c=t.updateBackground;return b()((Object(d.set)([ie]),a.a.createElement("select",Object(d.map)("SSelect",e,{defaultValue:n,onChange:ce(e,(function(e){c(e.currentTarget.value)}))}),["red","orange","yellow","green","steelblue","purple"].map((function(e){return a.a.createElement("option",Object(d.map)("option",{key:e,children:e}))})))))},le=Object(d.create)([]),fe=function(){var e=Object(r.useState)([]),t=p()(e,2),n=t[0],c=t[1],o=Object(r.useState)("steelblue"),u=p()(o,2),s=u[0],f=u[1];return Object(r.useEffect)((function(){function e(){return(e=l()(i.a.mark((function e(){var t;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,D.get();case 2:t=e.sent,c(t);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}!function(){e.apply(this,arguments)}()}),[]),Object(r.useEffect)((function(){D.update(n)}),[n]),b()((Object(d.set)([le,(Object(d.__css__)("","45h"),{})]),a.a.createElement(T.Provider,Object(d.map)("Context.Provider",{value:{updateNotes:c,background:s,updateBackground:f}}),a.a.createElement(Z,{className:b.a.styles.__Container},n.map((function(e){return a.a.createElement(ee,Object(d.map)("Item",{key:e.id,tag:$,defaultValue:e.content},e))})),a.a.createElement(se,{className:b.a.styles.__Background}),a.a.createElement(ae,{className:b.a.styles.__Added}),a.a.createElement(V,{className:b.a.styles.__Trash})))))};o.a.render(a.a.createElement(fe,null),document.querySelector("#root"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,